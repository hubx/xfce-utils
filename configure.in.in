dnl $Id$
dnl
dnl Copyright (c) 2002-2009
dnl         The Xfce development team. All rights reserved.
dnl
dnl Written for Xfce by Olivier Fourdan <fourdan@xfce.org>, Jasper
dnl Huijsmans <jasper@xfce.org>, Benedikt Meurer <benny@xfce.org>
dnl and Xavier MAILLARD <zedek@fxgsproject.org>.
dnl

dnl Version information
m4_define([xfce_utils_version_major], [4])
m4_define([xfce_utils_version_minor], [7])
m4_define([xfce_utils_version_micro], [1])
m4_define([xfce_utils_version_nano],  []) dnl leave this empty to have no nano version
m4_define([xfce_utils_version_build], [@REVISION@])
m4_define([xfce_utils_version_tag],   [])
m4_define([xfce_utils_version], [xfce_utils_version_major().xfce_utils_version_minor().xfce_utils_version_micro()ifelse(xfce_utils_version_nano(), [], [], [.xfce_utils_version_nano()])ifelse(xfce_utils_version_tag(), [git], [xfce_utils_version_tag()-xfce_utils_version_build()], [xfce_utils_version_tag()])])

dnl Debugging support for GIT snapshots
m4_define([xfce_utils_debug_default], [ifelse(xfce_utils_version_tag(), [git], [yes], [minimum])])

AC_INIT([xfce-utils], [xfce_utils_version], [http://bugzilla.xfce.org])
AM_INIT_AUTOMAKE([dist-bzip2])
AM_CONFIG_HEADER([config.h])
AM_MAINTAINER_MODE()
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

dnl Check for UNIX variants
AC_AIX
AC_ISC_POSIX
AC_MINIX
AM_CONDITIONAL([HAVE_CYGWIN], [test "`uname | grep \"CYGWIN\"`" != ""])

dnl Check for basic programs
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LIBTOOL
AC_PROG_INTLTOOL([0.31], [no-xml])

dnl Check C Compiler Characteristics
AC_C_CONST
AC_C_INLINE

dnl Check for standard header files
AC_HEADER_STDC
AC_CHECK_HEADERS([errno.h unistd.h string.h stdlib.h])
AC_CHECK_FUNCS([daemon setsid])

dnl Check for X11 installed
XDT_CHECK_LIBX11_REQUIRE

dnl Check for default browser to use
AC_MSG_CHECKING([what browser to use by default])
AC_ARG_WITH([browser],
AC_HELP_STRING([--with-browser=BROWSER], [What should be the default browser?]),
  [], [with_browser=""])
BROWSER_DEFAULT=$with_browser
AC_SUBST([BROWSER_DEFAULT])
AC_MSG_RESULT([$with_browser])

dnl Check for default terminal to use
AC_MSG_CHECKING([what terminal to use by default])
AC_ARG_WITH([terminal],
AC_HELP_STRING([--with-terminal=TERMINAL], 
	       [What should be the default terminal?]),
	       [], [with_terminal=""])
TERMINAL_DEFAULT=$with_terminal
AC_SUBST([TERMINAL_DEFAULT])
AC_MSG_RESULT([$with_terminal])


dnl Check for default browser to use
AC_MSG_CHECKING([what xsession-prefix to use])
AC_ARG_WITH([xsession-prefix],
            AC_HELP_STRING([--with-xsession-prefix=XSESSION_PREFIX], [What should be the prefix for the xsession .desktop file?]),
  [], [with_xsession_prefix="/usr"])
XSESSION_PREFIX=$with_xsession_prefix
AC_SUBST([XSESSION_PREFIX])
AC_MSG_RESULT([$with_xsession_prefix])

dnl the xfconf migration requires perl with XML::Parser
AC_ARG_ENABLE([xfconf-migration],
              [AC_HELP_STRING([--disable-xfconf-migration],
                              [Do not require perl/XML::Parser for Xfconf settings migration @<:@default=required@:>@])],
              [do_xfconf_migration=$enableval], [do_xfconf_migration=yes])
if test "x$do_xfconf_migration" = "xyes"; then
    AC_PATH_PROGS([PERL], [perl5.8 perl5.6 perl5 perl])
    if test -z "$PERL"; then
        AC_MSG_ERROR([perl not found; required for Xfconf migration. Pass --disable-xfconf-migration to ignore this.])
    fi
    AC_MSG_CHECKING([for XML::Parser])
    if `$PERL -e 'require XML::Parser;' >/dev/null 2>&1`; then
        AC_MSG_RESULT([found])
    else
        AC_MSG_RESULT([not found])
        AC_MSG_ERROR([perl module XML::Parser not found; required for Xfconf migration. Pass --disable-xfconf-migration to ignore this.])
    fi
fi
AM_CONDITIONAL([XFCONF_MIGRATION], [test "x$do_xfconf_migration" = "xyes"])

dnl Check for i18n support
XDT_I18N([@LINGUAS@])

dnl Check for required packages
XDT_CHECK_PACKAGE([GTK], [gtk+-2.0], [2.10.0])
XDT_CHECK_PACKAGE([LIBXFCE4UTIL], [libxfce4util-1.0], [4.6.0])
XDT_CHECK_PACKAGE([LIBXFCE4UI], [libxfce4ui-1], [4.7.0])

dnl check for dbus and libdbus-glib
AM_CONDITIONAL([HAVE_DBUS], [test "x$DBUS_FOUND" = "xyes"])
XDT_CHECK_OPTIONAL_PACKAGE([DBUS], [dbus-glib-1], 
                           [0.33], [dbus], [D-BUS support])

dnl check for location Xfce glade files were installed to
XFCE_LIBGLADE_MODULE_PATH="`pkg-config --variable libglade_module_path libxfcegui4-1.0`"
XFCE_GLADE_CATALOG_PATH="`pkg-config --variable glade_catalog_path libxfcegui4-1.0`"
XFCE_GLADE_PIXMAP_PATH="`pkg-config --variable glade_pixmap_path libxfcegui4-1.0`"
XFCE_GLADE_MODULE_PATH="`pkg-config --variable glade_module_path libxfcegui4-1.0`"
AC_SUBST(XFCE_LIBGLADE_MODULE_PATH)
AC_SUBST(XFCE_GLADE_CATALOG_PATH)
AC_SUBST(XFCE_GLADE_PIXMAP_PATH)
AC_SUBST(XFCE_GLADE_MODULE_PATH)

dnl ***************************************************
dnl *** Check if we need to build the documentation ***
dnl ***************************************************
AC_ARG_ENABLE([gen-doc], [AC_HELP_STRING([--enable-gen-doc], 
              [Generate HTML documentation (requires xsltproc, xml2po and xmllint) [default=no]])],, [enable_gen_doc=no])
if test x"$enable_gen_doc" = x"yes"; then
    AC_PATH_PROG([XSLTPROC], [xsltproc], [no])
    if test x"$XSLTPROC" = x"no"; then
        enable_gen_doc=no
    fi

    AC_PATH_PROG([XML2PO], [xml2po], [no])
    if test x"$XML2PO" = x"no"; then
        enable_gen_doc=no
    fi

    AC_PATH_PROG([XMLLINT], [xmllint], [no])
    if test x"$XMLLINT" = x"no"; then
        enable_gen_doc=no
    fi

    if test x"$enable_gen_doc" = x"no"; then
        AC_MSG_ERROR([Compiling with --enable-gen-doc but one of xml2po, xsltproc or xmllint is missing.])
    fi
fi
AM_CONDITIONAL([GENERATE_DOCUMENTATION], [test x"$enable_gen_doc" = x"yes"])

dnl Check for debugging support
XDT_FEATURE_DEBUG([xfce_utils_debug_default])

dnl Check for linker optimizations
XDT_FEATURE_LINKER_OPTS()

dnl Check for vendor specific information
AC_MSG_CHECKING([for additional vendor info])
AC_ARG_WITH([vendor-info],
AC_HELP_STRING([--with-vendor-info=FILE], [Specify an additional file that should be displayed in the about dialog]),
  [], [with_vendor_info=])
if test x"$with_vendor_info" != x""; then
  AC_DEFINE_UNQUOTED([VENDOR_INFO], ["$with_vendor_info"], [Additional vendor info])
  AC_MSG_RESULT([$with_vendor_info])
else
  AC_MSG_RESULT([none])
fi

AC_OUTPUT([
xfce-utils.spec
Makefile
po/Makefile.in
doc/Makefile
doc/manual/Makefile
doc/manual/images/Makefile
doc/manual/po/Makefile
icons/Makefile
icons/48x48/Makefile
xfrun/Makefile
scripts/Makefile
scripts/xinitrc.in
xfce4-about/Makefile
])

echo
echo "Build Configuration:"
if test x"$enable_gen_doc" = x"yes"; then
echo "* Documentation:  yes (generate)"
elif test -d "${srcdir}/doc/manual/html"; then
echo "* Documentation: yes (in tarball)"
else
echo "* Documentation: no"
fi
echo
